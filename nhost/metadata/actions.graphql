type Query {
  allJobs(
    filter: JobsQueryInput
  ): [Job]
}

type Mutation {
  applyJob(
    args: JobUserInput!
  ): Job
}

type Query {
  jobApplicants(
    filter: JobUserInput
  ): [Profile]
}

type Query {
  myApplications(
    filter: MyJobsQueryInput
  ): [Job]
}

type Query {
  myJobs(
    filter: MyJobsQueryInput
  ): [Job]
}

type Query {
  myProfile(
    user_id: Int!
  ): Profile
}

type Mutation {
  postJob(
    arg: JobUserInput!
  ): Job
}

type Mutation {
  registerAsEmployer: Profile!
}

type Mutation {
  registerAsSeeker: Profile!
}

type Mutation {
  updateMyProfile(
    args: JobUserInput!
  ): Profile
}

type Mutation {
  uploadResume(
    args: JobUserInput!
  ): Profile
}

input JobsQueryInput {
  title: String
  is_active: Boolean
}

input MyJobsQueryInput {
  user_id: String!
}

input JobUserInput {
  job_id: String!
  user_id: String!
}

input JobApplicantsInput {
  job_id: String!
  user_id: String!
}

input SampleInput {
  username: String!
  password: String!
}

type Job {
  id: String!
  title: String!
  description: String
  type: String
  location: String
  company: Company
}

type Profile {
  name: String!
  email: String!
  address: String
  user: User
}

type SampleOutput {
  accessToken: String!
}

type Company {
  id: String!
  name: String!
  email: String
}

type User {
  display_name: String!
  avatar_url: String
  email: String
  email_verified: Boolean
  default_role: String
}

