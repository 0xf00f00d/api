type Mutation {
  addUserRole(
    user_id: String!
    role: String!
  ): Profile
}

type Query {
  allJobs(
    filter: JobsQueryInput
  ): [Job]
}

type Mutation {
  applyJob(
    args: JobUserInput!
  ): Job
}

type Mutation {
  createMyProfile(
    user_id: String!
  ): Profile
}

type Query {
  hasApplication(
    arg: JobUserInput!
  ): ApplicationCheckResult
}

type Query {
  jobApplicants(
    filter: JobUserInput
  ): [Profile]
}

type Query {
  myApplications(
    filter: MyJobsQueryInput
  ): [Job]
}

type Query {
  myCompany(
    employer_id: uuid!
  ): Company
}

type Query {
  myJobs(
    company_id: uuid!
  ): [Job]
}

type Query {
  myProfile(
    user_id: Int!
  ): Profile
}

type Mutation {
  postJob(
    arg: PostJobInput!
  ): Job
}

type Mutation {
  registerAsEmployer(
    arg: EmployerProfileInput!
  ): Profile!
}

type Mutation {
  registerAsSeeker(
    arg: SeekerProfileInput!
  ): Profile!
}

type Mutation {
  setDefaultRole(
    user_id: String!
    role: String!
  ): Profile
}

type Mutation {
  updateMyProfile(
    args: JobUserInput!
  ): Profile
}

type Mutation {
  uploadResume(
    args: JobUserInput!
  ): Profile
}

input JobsQueryInput {
  title: String
  is_active: Boolean
}

input MyJobsQueryInput {
  user_id: uuid!
}

input JobUserInput {
  job_id: uuid!
  user_id: uuid!
}

input JobApplicantsInput {
  job_id: uuid!
  user_id: uuid!
}

input UserInput {
  email: String
  display_name: String
}

input JobInput {
  title: String!
  description: String
  type: String
  location: String
  is_active: Boolean
  company_id: uuid!
}

input PostJobInput {
  user_id: uuid!
  job: JobInput!
}

input SeekerProfileInput {
  user_id: uuid!
  name: String
  email: String
}

input EmployerProfileInput {
  employer_id: uuid!
  name: String
  email: String
}

input SampleInput {
  username: String!
  password: String!
}

type Job {
  id: uuid
  title: String
  description: String
  type: String
  location: String
  created_at: String
  company_id: uuid
  company: Company
}

type Profile {
  name: String!
  email: String!
  address: String
  user: User
}

type Company {
  id: uuid
  name: String
  email: String
  address: String
  telephone: String
  created_at: String
}

type User {
  display_name: String!
  avatar_url: String
  email: String
  email_verified: Boolean
  default_role: String
}

type SampleOutput {
  accessToken: String!
}

type ApplicationCheckResult {
  found: Boolean
}

